// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compiler: codegen ConditionalExpression 1`] = `
"
return function render() {
  with (this) {
    return ok
      ? foo()
      : orNot
        ? bar()
        : baz()
  }
}"
`;

exports[`compiler: codegen Element (callExpression + objectExpression + arrayExpression) 1`] = `
"
return function render() {
  with (this) {
    return createVNode(\\"div\\", {
      id: \\"foo\\",
      [prop]: bar,
      [foo + bar]: bar
    }, [
      createVNode(\\"p\\", { \\"some-key\\": \\"foo\\" })
    ], [
      foo,
      createVNode(\\"p\\")
    ])
  }
}"
`;

exports[`compiler: codegen SequenceExpression 1`] = `
"
return function render() {
  with (this) {
    return (foo, bar(baz))
  }
}"
`;

exports[`compiler: codegen comment 1`] = `
"
return function render() {
  with (this) {
    return _createVNode(_Comment, 0, \\"foo\\")
  }
}"
`;

exports[`compiler: codegen compound expression 1`] = `
"
return function render() {
  with (this) {
    return _ctx.foo + _toString(bar)
  }
}"
`;

exports[`compiler: codegen forNode 1`] = `
"
return function render() {
  with (this) {
    return (foo, bar)
  }
}"
`;

exports[`compiler: codegen function mode preamble 1`] = `
"const _Vue = Vue

return function render() {
  with (this) {
    const { helperOne: _helperOne, helperTwo: _helperTwo } = _Vue
    
    return null
  }
}"
`;

exports[`compiler: codegen function mode preamble w/ prefixIdentifiers: true 1`] = `
"const { helperOne, helperTwo } = Vue

return function render() {
  const _ctx = this
  return null
}"
`;

exports[`compiler: codegen hoists 1`] = `
"
const _hoisted_1 = hello
const _hoisted_2 = { id: \\"foo\\" }

return function render() {
  with (this) {
    return null
  }
}"
`;

exports[`compiler: codegen ifNode 1`] = `
"
return function render() {
  with (this) {
    return (foo, bar)
  }
}"
`;

exports[`compiler: codegen interpolation 1`] = `
"
return function render() {
  with (this) {
    return _toString(hello)
  }
}"
`;

exports[`compiler: codegen module mode preamble 1`] = `
"import { helperOne, helperTwo } from \\"vue\\"

export default function render() {
  const _ctx = this
  return null
}"
`;

exports[`compiler: codegen prefixIdentifiers: true should inject _ctx statement 1`] = `
"
return function render() {
  const _ctx = this
  return null
}"
`;

exports[`compiler: codegen statements 1`] = `
"
return function render() {
  with (this) {
    const a = 1
    const b = 2
    
    return null
  }
}"
`;

exports[`compiler: codegen static text 1`] = `
"
return function render() {
  with (this) {
    return \\"hello\\"
  }
}"
`;
