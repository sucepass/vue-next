// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compiler: integration tests function mode 1`] = `
"const _Vue = Vue
return function render() {
  with (this) {
    const { createVNode: _createVNode, toString: _toString, renderList: _renderList } = _Vue
    return _createVNode(\\"div\\", {
      id: \\"foo\\",
      class: bar.baz
    }, [
      _toString(world.burn()),
      ok
        ? _createVNode(\\"div\\", null, \\"yes\\")
        : \\"no\\",
      _renderList(list, (value, index) => {
        return _createVNode(\\"div\\", null, [
          _createVNode(\\"span\\", null, _toString(value + index))
        ])
      })
    ], 2)
  }
}"
`;

exports[`compiler: integration tests function mode w/ prefixIdentifiers: true 1`] = `
"const { createVNode, toString, renderList } = Vue

return function render() {
  const _ctx = this
  return createVNode(\\"div\\", {
    id: \\"foo\\",
    class: _ctx.bar.baz
  }, [
    toString(_ctx.world.burn()),
    (_ctx.ok)
      ? createVNode(\\"div\\", null, \\"yes\\")
      : \\"no\\",
    renderList(_ctx.list, (value, index) => {
      return createVNode(\\"div\\", null, [
        createVNode(\\"span\\", null, toString(value + index))
      ])
    })
  ], 2)
}"
`;

exports[`compiler: integration tests module mode 1`] = `
"import { createVNode, toString, renderList } from \\"vue\\"

export default function render() {
  const _ctx = this
  return createVNode(\\"div\\", {
    id: \\"foo\\",
    class: _ctx.bar.baz
  }, [
    _toString(_ctx.world.burn()),
    (_ctx.ok)
      ? createVNode(\\"div\\", null, \\"yes\\")
      : \\"no\\",
    _renderList(_ctx.list, (value, index) => {
      return createVNode(\\"div\\", null, [
        createVNode(\\"span\\", null, _toString(value + index))
      ])
    })
  ], 2)
}"
`;
